/*
 * This file is generated by jOOQ.
 */
package org.egorkazantsev.library.repository.generated.jooq.tables.records;


import java.time.LocalDate;
import java.util.UUID;

import org.egorkazantsev.library.repository.generated.jooq.tables.BookOrder;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.YearToSecond;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BookOrderRecord extends UpdatableRecordImpl<BookOrderRecord> implements Record5<UUID, UUID, UUID, LocalDate, YearToSecond> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.book_order.id</code>.
     */
    public BookOrderRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.book_order.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.book_order.reader_id</code>.
     */
    public BookOrderRecord setReaderId(UUID value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.book_order.reader_id</code>.
     */
    public UUID getReaderId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.book_order.book_id</code>.
     */
    public BookOrderRecord setBookId(UUID value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.book_order.book_id</code>.
     */
    public UUID getBookId() {
        return (UUID) get(2);
    }

    /**
     * Setter for <code>public.book_order.borrowing_date</code>.
     */
    public BookOrderRecord setBorrowingDate(LocalDate value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.book_order.borrowing_date</code>.
     */
    public LocalDate getBorrowingDate() {
        return (LocalDate) get(3);
    }

    /**
     * Setter for <code>public.book_order.period</code>.
     */
    public BookOrderRecord setPeriod(YearToSecond value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.book_order.period</code>.
     */
    public YearToSecond getPeriod() {
        return (YearToSecond) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<UUID, UUID, UUID, LocalDate, YearToSecond> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<UUID, UUID, UUID, LocalDate, YearToSecond> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return BookOrder.BOOK_ORDER.ID;
    }

    @Override
    public Field<UUID> field2() {
        return BookOrder.BOOK_ORDER.READER_ID;
    }

    @Override
    public Field<UUID> field3() {
        return BookOrder.BOOK_ORDER.BOOK_ID;
    }

    @Override
    public Field<LocalDate> field4() {
        return BookOrder.BOOK_ORDER.BORROWING_DATE;
    }

    @Override
    public Field<YearToSecond> field5() {
        return BookOrder.BOOK_ORDER.PERIOD;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public UUID component2() {
        return getReaderId();
    }

    @Override
    public UUID component3() {
        return getBookId();
    }

    @Override
    public LocalDate component4() {
        return getBorrowingDate();
    }

    @Override
    public YearToSecond component5() {
        return getPeriod();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public UUID value2() {
        return getReaderId();
    }

    @Override
    public UUID value3() {
        return getBookId();
    }

    @Override
    public LocalDate value4() {
        return getBorrowingDate();
    }

    @Override
    public YearToSecond value5() {
        return getPeriod();
    }

    @Override
    public BookOrderRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public BookOrderRecord value2(UUID value) {
        setReaderId(value);
        return this;
    }

    @Override
    public BookOrderRecord value3(UUID value) {
        setBookId(value);
        return this;
    }

    @Override
    public BookOrderRecord value4(LocalDate value) {
        setBorrowingDate(value);
        return this;
    }

    @Override
    public BookOrderRecord value5(YearToSecond value) {
        setPeriod(value);
        return this;
    }

    @Override
    public BookOrderRecord values(UUID value1, UUID value2, UUID value3, LocalDate value4, YearToSecond value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BookOrderRecord
     */
    public BookOrderRecord() {
        super(BookOrder.BOOK_ORDER);
    }

    /**
     * Create a detached, initialised BookOrderRecord
     */
    public BookOrderRecord(UUID id, UUID readerId, UUID bookId, LocalDate borrowingDate, YearToSecond period) {
        super(BookOrder.BOOK_ORDER);

        setId(id);
        setReaderId(readerId);
        setBookId(bookId);
        setBorrowingDate(borrowingDate);
        setPeriod(period);
    }

    /**
     * Create a detached, initialised BookOrderRecord
     */
    public BookOrderRecord(org.egorkazantsev.library.repository.generated.jooq.tables.pojos.BookOrder value) {
        super(BookOrder.BOOK_ORDER);

        if (value != null) {
            setId(value.getId());
            setReaderId(value.getReaderId());
            setBookId(value.getBookId());
            setBorrowingDate(value.getBorrowingDate());
            setPeriod(value.getPeriod());
        }
    }
}
