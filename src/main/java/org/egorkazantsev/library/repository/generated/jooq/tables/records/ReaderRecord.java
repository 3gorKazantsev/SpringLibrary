/*
 * This file is generated by jOOQ.
 */
package org.egorkazantsev.library.repository.generated.jooq.tables.records;


import java.util.UUID;

import org.egorkazantsev.library.repository.generated.jooq.tables.Reader;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReaderRecord extends UpdatableRecordImpl<ReaderRecord> implements Record4<UUID, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.reader.id</code>.
     */
    public ReaderRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.reader.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.reader.full_name</code>.
     */
    public ReaderRecord setFullName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.reader.full_name</code>.
     */
    public String getFullName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.reader.address</code>.
     */
    public ReaderRecord setAddress(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.reader.address</code>.
     */
    public String getAddress() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.reader.contacts</code>.
     */
    public ReaderRecord setContacts(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.reader.contacts</code>.
     */
    public String getContacts() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<UUID, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<UUID, String, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Reader.READER.ID;
    }

    @Override
    public Field<String> field2() {
        return Reader.READER.FULL_NAME;
    }

    @Override
    public Field<String> field3() {
        return Reader.READER.ADDRESS;
    }

    @Override
    public Field<String> field4() {
        return Reader.READER.CONTACTS;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getFullName();
    }

    @Override
    public String component3() {
        return getAddress();
    }

    @Override
    public String component4() {
        return getContacts();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getFullName();
    }

    @Override
    public String value3() {
        return getAddress();
    }

    @Override
    public String value4() {
        return getContacts();
    }

    @Override
    public ReaderRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public ReaderRecord value2(String value) {
        setFullName(value);
        return this;
    }

    @Override
    public ReaderRecord value3(String value) {
        setAddress(value);
        return this;
    }

    @Override
    public ReaderRecord value4(String value) {
        setContacts(value);
        return this;
    }

    @Override
    public ReaderRecord values(UUID value1, String value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ReaderRecord
     */
    public ReaderRecord() {
        super(Reader.READER);
    }

    /**
     * Create a detached, initialised ReaderRecord
     */
    public ReaderRecord(UUID id, String fullName, String address, String contacts) {
        super(Reader.READER);

        setId(id);
        setFullName(fullName);
        setAddress(address);
        setContacts(contacts);
    }

    /**
     * Create a detached, initialised ReaderRecord
     */
    public ReaderRecord(org.egorkazantsev.library.repository.generated.jooq.tables.pojos.Reader value) {
        super(Reader.READER);

        if (value != null) {
            setId(value.getId());
            setFullName(value.getFullName());
            setAddress(value.getAddress());
            setContacts(value.getContacts());
        }
    }
}
